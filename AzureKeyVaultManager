using Azure.Identity;
using Azure.Security.KeyVault.Secrets;
using EncryptConnectionStrings.Models;
using System;
using System.Configuration;

public static class AzureKeyVaultManager
{
    private static SecretClient _secretClient;

    static AzureKeyVaultManager()
    {
        try
        {
            //string keyVaultUrl = "https://your-keyvault-name.vault.azure.net/";

            string keyVaultUrl = ConfigurationManager.AppSettings["KeyVaultUrl"];
            if (string.IsNullOrEmpty(keyVaultUrl))
            {
                throw new InvalidOperationException("Key Vault URL is not configured or is empty.");
            }

            _secretClient = new SecretClient(new Uri(keyVaultUrl), new DefaultAzureCredential());
        }
        catch (Exception ex)
        {
            throw new InvalidOperationException("Failed to initialize AzureKeyVaultManager.", ex);
        }
    }

    public static AuthenticationSecrets GetAuthenticationSecrets()
    {
        try
        {
            // Retrieve secrets from Azure Key Vault
            string clientId = _secretClient.GetSecret("ClientId").Value.Value;
            string tenantId = _secretClient.GetSecret("TenantId").Value.Value;
            string clientSecret = _secretClient.GetSecret("ClientSecret").Value.Value;

            // Return them as an object
            return new AuthenticationSecrets
            {
                ClientId = clientId,
                TenantId = tenantId,
                ClientSecret = clientSecret
            };
        }
        catch (Exception ex)
        {
            throw new InvalidOperationException("Failed to retrieve authentication secrets.", ex);
        }
    }
}
